/* ================================= *
 *  Buttons 
 * ================================= */

/* common caret */
.caret {
	position: relative;
	display: inline-block;
	bottom: 2px;
	margin-left: 5px;
	width: 0;
	height: 0;
	border-right: 4px solid transparent;
	border-left: 4px solid transparent;
	border-top: 4px solid #fff;
	line-height: 1em;	
}

.caret-right {
	position: relative;
	display: inline-block;
	bottom: 2px;
	margin-left: 5px;
	width: 0;
	height: 0;
	border-top: 4px solid transparent;
	border-bottom: 4px solid transparent;
	border-left: 4px solid #fff;
	line-height: 1em;	
}

/* default button - dynamic */
.btn {
	position: relative;

	display: inline-block;
	margin: 0 5px 0 0;
	padding: 8px 20px;

	font-size: 0.8rem;
	font-weight: 900;
	text-align: center;
	text-decoration: none !important;
	text-transform: uppercase;
	white-space: pre;
	letter-spacing: 2px;
	line-height: 1rem;

	color: #fff;
	background: none;
	background-color: @blue;
	cursor: pointer;
	border: 2px solid transparent;
	border-radius: 0;
	outline: none !important;
	
	transition: 0.2s background, 0.2s border-color, 0.3s box-shadow;

	&:hover {
		color: #fff;
		border-color: rgba(0,0,0,0.1);
		box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 0 1000px 1000px rgba(255,255,255,0.2) inset;
	}

	&:active {
		color: #fff;
		border-color: rgba(0,0,0,0.2);
		box-shadow: 0 0px 1px rgba(0,0,0,0.2), 0 0 1000px 1000px rgba(0,0,0,0.05) inset;
	}

	&.active, .active > & {
		color: #fff;
		border-color: transparent;
		box-shadow: none;
		z-index: 1000;
	}

	&:focus {
		color: #fff;
	}


	// on dark background
	&.ondark, .dark & {
		border-color: rgba(0,0,0,0.05); 
		box-shadow: 0 0 1000px 1000px rgba(0,0,0,0.05) inset;
		
		&:hover {
			border-color: rgba(255,255,255,0.3);
		}

		&:active {
			box-shadow: 0 0 1000px 1000px rgba(0,0,0,0.2) inset;
			border-color: transparent;
		}
	}
}

// hollow style generator mixin
.generate-btn(@base-color: 'blue'; @text-color: 'white') {
	background-color: @@base-color;
	color: @@text-color;

	&.hollow {
		color: @@base-color;
		border-color: @@base-color;
		background: none;

		.caret {
			border-top-color: @@base-color; 
		}
		
		&:hover {
			color: @@text-color;
			border-color: @@base-color;
			background-color: @@base-color;
			box-shadow: 0 2px 4px rgba(0,0,0,0.2);

			.caret {
				border-top-color: @@text-color; 
			}
		}

		&:active {
			color: @@text-color;
			background-color: @@base-color;
			border-color: rgba(0,0,0,0.2);
			box-shadow: 0 0px 1px rgba(0,0,0,0.2), 0 0 1000px 1000px rgba(0,0,0,0.05) inset;

			.caret {
				border-top-color: @@text-color; 
			}
		}

		.active > &, &.active {
			color: @@text-color;
			border-color: transparent;
			background-color: @blue-d2;
			z-index: 1000;

			.caret {
				border-top-color: @@text-color; 
			}
		}
	}
}

// static palette button styles generator mixin
.generate-btn-custom(@base-color: 'blue'; @text-color: 'white') {

	// default filled style
	& {
		background-color: @@base-color;
		
		&:hover {
			background-color: ~'@{@{base-color}-l1}';
			border-color: ~'@{@{base-color}-d1}';
			box-shadow: 0 2px 4px rgba(0,0,0,0.2);
		}

		&:active {
			background-color: ~'@{@{base-color}-d1}';
			border-color: ~'@{@{base-color}-d2}';
			box-shadow: 0 0px 1px rgba(0,0,0,0.2);
		}

		.active > &, &.active {
			border-color: transparent;
			background-color: ~'@{@{base-color}-d2}';
		}
	}

	// on dark background
	&.ondark, .dark & {
		box-shadow: none;
		border-color: transparent;
		background-color: ~'@{@{base-color}-d1}';
		
		&:hover {
			background-color: @@base-color;
			border-color: ~'@{@{base-color}-l2}';
		}

		&:active {
			background-color: ~'@{@{base-color}-d2}';
			border-color: @@base-color;
		}
	}

	// hollow style
	&.hollow {
		color: @@base-color;
		border-color: @@base-color;
		background: none;

		.caret {
			border-top-color: @@base-color; 
		}
		
		&:hover {
			color: @@text-color;
			border-color: @@base-color;
			background-color: @@base-color;

			.caret {
				border-top-color: @@text-color; 
			}
		}

		&:active {
			color: @@text-color;
			background-color: ~'@{@{base-color}-d1}';
			border-color: ~'@{@{base-color}-d2}';

			.caret {
				border-top-color: @@text-color; 
			}
		}

		.active > &, &.active {
			color: @@text-color;
			border-color: transparent;
			background-color: ~'@{@{base-color}-d2}';
			z-index: 1000;

			.caret {
				border-top-color: @@text-color; 
			}
		}
	}
}


/* Dynamic button color sets */
.btn {
	& 		{ .generate-btn(); }
	&.blue 	{ .generate-btn('blue'); }
	&.green { .generate-btn('green'); }
	&.red 	{ .generate-btn('red'); }

	&.black 	{ .generate-btn('black'); } 
	&.white 	{ .generate-btn('white'; 'black'); } //define custom text color

	&.purple 	{ .generate-btn('purple'); }
	&.orange 	{ .generate-btn('orange'); }
	&.teal 		{ .generate-btn('teal'); }
}

/* Custom button color sets */
.btn {

	// NOTE
	//
	// To use this generator you must have all 4 shades of
	// your color in color-palette.less.
	//
	// Generating these custom classes with the same name 
	// will override the former dynamic variants


	&.blue 	{ .generate-btn-custom('blue'); }
	&.green { .generate-btn-custom('green'); }
	&.red 	{ .generate-btn-custom('red'); }

	&.yellow 	{ .generate-btn-custom('yellow'); }
}


/* disabled */
.btn {
	&.disabled, &:disabled {
		background-color: #666;
		color: #aaa;
		box-shadow: none;
		border-color: transparent;

		&:hover, &:active, &:focus {
			background-color: #666;
			border-color: transparent;
			cursor: default;
		}
	}
}

.btn.hollow {
	background: none;

	&.disabled, &:disabled {
		color: #aaa;
		border-color: #aaa;
		box-shadow: none;

		&:hover, &:active, &:focus {
			background: none;
			color: #aaa;
			border-color: #aaa;
			cursor: default;
			box-shadow: none;
		}
	}

	.dark &.whitetext:not(.disabled) {
		color: #fff;
	}
}


/* button groups */
.btn-group {
	margin-bottom: 5px;

	.btn {
		display: inline-block;
		margin-right: 5px;
	}

	.btn-group {
		display: inline-block;
	}
}


/* dropdowns */
ul.dropdown-menu {
	display: none;
	position: absolute;
	z-index: 1000;
	float: left;
	margin: 0;
	padding: 0;
	list-style: none;
	background: @blue-d1;
	color: #fff;
	//border: 2px solid @blue;
	.drop-shadow;

	li {
		margin: 0;
		padding: 0;
		min-width: 160px;

		a {
			width: 100%;
			display: block;
			padding: 5px 10px;
			color: inherit;
			font-size: 0.9em;
		}

		&:hover > a {
			text-decoration: none;
			background: @blue-l1;
		}

		&.divider {
			height: 5px;
			border-bottom: 1px solid rgba(255,255,255,0.3);
			padding-bottom: 5px;
			margin-bottom: 5px;
		}
	}
	
	/* nested submenu */
	& > .submenu {
		position: relative;
		width: 100%;

		& > a {
			position: relative;

			&:after {
				content: " ";
				.caret-right;
				position: absolute;
				top: 50%;
				right: 5px;
				margin-top: -4px;
			}
		}

		ul.dropdown-menu {
			display: none;
			top: 0;
			left: 100%;
		}

		&:hover ul.dropdown-menu {
			display: block;
		}
	}


	.active & {
		display: block;
	}


}


